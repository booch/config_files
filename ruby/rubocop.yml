---

require:
  - rubocop-rspec
  - rubocop-performance

# Provide more details in output.
AllCops:
  DisplayCopNames: true
  DisplayStyleGuide: true
  ExtraDetails: true

# Allow longer lines.
Layout/LineLength:
  Max: 120

# Don't require documentation for everything.
Style/Documentation:
  Enabled: false

# Require `private` to be used as a prefix to private method definitions.
# We find this easier to read and move code.
Style/AccessModifierDeclarations:
  EnforcedStyle: inline

# Use `{}` for blocks that return a value; otherwise use `do` and `end`.
# We make a few exceptions, mostly for RSpec.
Style/BlockDelimiters:
  EnforcedStyle: semantic
  FunctionalMethods:
    - expect
  IgnoredMethods:
    - let
    - let!
    - subject

# Don't require `freeze` on every immutable constant.
Style/MutableConstant:
  Enabled: false

# Don't require adding `# frozen_string_literal: true` to every file in Ruby 2.3+.
Style/FrozenStringLiteralComment:
  Enabled: false

# Don't use backticks for shell commands -- they're too hard to distinguish.
Style/CommandLiteral:
  EnforcedStyle: percent_x

# Don't require underscores for long numeric literals (but warn about them).
Style/NumericLiterals:
  Severity: warning

# Require blank lines inside class/module definitions.
Layout/EmptyLinesAroundClassBody:
  EnforcedStyle: empty_lines
Layout/EmptyLinesAroundModuleBody:
  EnforcedStyle: empty_lines

# Allow (but don't require) extra empty lines.
Layout/EmptyLines:
  Enabled: false

# Don't require empty methods to have the `def` and `end` on a single line.
Style/EmptyMethod:
  Enabled: false

# Use `[]` for `%w`, to remind us that we're creating an Array.
# Use `[]` for `%x`, because it looks kind of like an input box.
# Use `{}` for `%q`, because it's set off a bit nicer than `()`.
# Use `{}` for `%r`, because regular expressions might have unbalanced `()` or `<>`.
Style/PercentLiteralDelimiters:
  PreferredDelimiters:
    '%w': []
    '%W': []
    '%x': []
    '%': '{}'
    '%q': '{}'
    '%Q': '{}'
    '%r': '{}'

# Allow explicit `self`, as it adds clarity on occasion.
Style/RedundantSelf:
  Enabled: false

# Use `%r` for regular expressions that span more than 1 line.
Style/RegexpLiteral:
  EnforcedStyle: mixed

# Use Jim Weirich's suggestion of using `fail`, except when re-raising an exception.
Style/SignalException:
  EnforcedStyle: semantic

# Provide a better description, due to high probability of false positives.
Lint/RaiseException:
  Enabled: true
  Description: Use `StandardError`, or prefix `Exception` with a namespace.

# Default to double quotes, as they require less incidental changes.
Style/StringLiterals:
  EnforcedStyle: double_quotes

# Allow either type of quotes within Ruby code inside interpolations.
Style/StringLiteralsInInterpolation:
  Enabled: false

# Allow (but don't require) a space before a block brace.
Layout/SpaceBeforeBlockBraces:
  Enabled: false

# Don't allow a space directly inside a Hash literal.
Layout/SpaceInsideHashLiteralBraces:
  EnforcedStyle: no_space

# Require a space directly inside a block delineated with braces.
# This is the default, but I wanted to call it out in contrast to Hash literals.
Layout/SpaceInsideBlockBraces:
  EnforcedStyle: space
  EnforcedStyleForEmptyBraces: no_space
  SpaceBeforeBlockParameters: true

# When using multi-line Arrays and Hashes, ensure the first element is also on its own line.
Layout/FirstArrayElementLineBreak:
  Enabled: true
Layout/FirstHashElementLineBreak:
  Enabled: true

# Allow (but don't require) trailing comma in Array and Hash literals.
Style/TrailingCommaInArrayLiteral:
  Enabled: false
Style/TrailingCommaInHashLiteral:
  Enabled: false

# Don't complain about the block comments generated by RSpec.
Style/BlockComments:
  Exclude:
    - 'spec/spec_helper.rb'

# Prefer `__send__` or `public_send` over `send`.
Style/Send:
  Enabled: true

# Don't complain that `has_many` doesn't end with a question mark.
Naming/PredicateName:
  AllowedMethods:
    - has_many

# Allow `has_key?` and `has_value?` on Hash, as I think they read better than `key?` and `value?`.
Style/PreferredHashMethods:
  Enabled: false

# Ensure there's a newline at the end of the file, but not a blank line.
Layout/TrailingEmptyLines:
  EnforcedStyle: final_newline

# Allow assigning to the same variable in multiple branches of an `if` or `case`.
Style/ConditionalAssignment:
  Enabled: false

# Allow long blocks in specs and tests.
Metrics/BlockLength:
  Exclude:
    - spec/**/*
    - test/**/*

# Don't require use of Ruby 2.3+ safe navigation operator.
Style/SafeNavigation:
  Enabled: false

# Allow `!!` to force a boolean result.
Style/DoubleNegation:
  Enabled: false

# I prefer to order my gems in order of "importance".
Bundler/OrderedGems:
  Enabled: false

# Don't require an empty line after a guard clause. TODO: Perhaps reconsider this decision.
Layout/EmptyLineAfterGuardClause:
  Enabled: false

# Allow (but don't require) putting each accessor on its own line.
Style/AccessorGrouping:
  Enabled: false

# I don't see any good reason to call `super` when the superclass has no explicit `initialize`.
# TODO: If possible, submit a PR with a config option so the cop will allow (only) this case to pass.
#       Probably not possible; static analysis probably can't inspect the superclass.
# See https://github.com/rubocop-hq/rubocop/issues/8506 for more details.
Lint/MissingSuper:
  Enabled: false

# Don't require any specific format when using exponential notation (like `10e6` or `1.0e7`).
Style/ExponentialNotation:
  Enabled: false
