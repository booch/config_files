[user]
	name = Craig Buchek
	email = craig@boochtek.com
[core]
	editor = nano -Y patch # Use nano for commit messages, and colorize diffs. (http://www.ralfebert.de/blog/git/shortcuts/)
	excludesfile = ~/.gitignore
[color]
	ui = auto
	diff = auto
	status = auto
	branch = auto
	interactive = auto
[apply]
	whitespace = strip
	whitespace = nowarn
[merge]
	tool = opendiff
	summary = true
[branch]
	autosetuprebase = always  # Make 'git pull' rebase local commits on top of newly pulled-down commits instead of merging them. (http://www.viget.com/extend/only-you-can-prevent-git-merge-commits/)
[push]
	default = upstream  # Push only the current branch by default, not all branches.
[rerere]
	enabled = true  # Automatically record and replay merge conflict resolutions. (http://git-scm.com/2010/03/08/rerere.html)
[alias]
	addall = !git add . && git add -u && git st
	amend = commit --amend --reset-author --reuse-message=HEAD
	aliases = !git config --get-regexp 'alias.*' | colrm 1 6 | sed 's/[ ]/ = /' | sort
	br = branch
	ci = commit -v
	clear = !git add . && git stash && git stash drop
	co = checkout
	cp = cherry-pick
	di = diff
	diff-stat = diff -b --stat
	graph = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
	hist = log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short
	history = log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short
	ignore = !([ ! -e .gitignore ] && touch .gitignore) | echo $1 >>.gitignore
	lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
	log-graph = log --all --graph --decorate
	log-refs = log --all --graph --decorate --oneline --simplify-by-decoration --no-merges
	log-timeline = log --format='%h %an %ar - %s'
	log-local = log --oneline origin..HEAD
	log-fetched = log --oneline HEAD..origin/master
	merged = branch --merged
	oneline = log --oneline
	p = pair
	patch = log -p --no-walk # Generate patch file from a commit.
	pick = cherry-pick
	prune = remote prune
	prune-all = !git remote | xargs -n 1 git remote prune
	search = log --pretty=short -S
	st = status
	staged = diff --staged
	stat = status
	svn-pull = !git svn fetch && git svn rebase
	svn-push = !git svn dcommit
	uncommit = reset --soft HEAD^
	unmerge = reset --hard ORIG_HEAD
	unmerged = branch --no-merged
	unstage = reset HEAD --
	wdiff = diff --word-diff-regex=[a-zA-Z_0-9]+
	which-branches-contain = branch -a --contains
	which-tags-contain = name-rev --name-only
	wipe = !git reset --hard; git clean -fd
