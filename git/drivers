# These drivers are referenced via git attributes.

[diff "pdf"]
	binary = true
	# NOTE: `markitdown` comes from Microsoft, and requires Python.
	# NOTE: `pdftotext` comes from `poppler` or `xpdf`.
	# NOTE: `tika` requires Java.
	# NOTE: Defaults to `cat` if none of those are found.
	# Hat tip to https://stackoverflow.com/a/78141773/26311 for multi-line command.
	textconv = "f() {\
        if command -v tika &> /dev/null; then \
            tika --text $1; \
		elif command -v pandoc &> /dev/null; then \
			pandoc --from pdf --to markdown $1; \
		elif command -v markitdown &> /dev/null; then \
			markitdown $1; \
		elif command -v pdftotext &> /dev/null; then \
			pdftotext -layout -q $1 -; \
		else \
			cat $1; \
        fi; \
    }; f"
	cachetextconv = true

[diff "plist"]
	textconv = "plutil -convert xml1 -o -"

[diff "zip"]
	textconv = unzip -c -a

[diff "localizablestrings"]
	textconv = "iconv -f utf-16 -t utf-8"

[diff "exif"]
	binary = true
	textconv = exiftool
	cachetextconv = true

# TODO: Excel and PowerPoint too
[diff "word"]
	binary = true
	textconv = "f() {\
        if command -v tika &> /dev/null; then \
            tika --text $1; \
		elif command -v pandoc &> /dev/null; then \
			pandoc --to markdown $1; \
		elif command -v markitdown &> /dev/null; then \
			markitdown $1; \
		else \
			exit 2; \
        fi; \
    }; f"
	cachetextconv = true
	prompt = false  # Don't prompt to open the diff tool.

[merge "ours"]
	name = 'Resolves merge conflicts by taking _our_ latest version'
	driver = true

[merge "Gemfile.lock"]
	name = 'Resolves Gemfile.lock merge conflicts by running `bundle install`'
	driver = 'echo "Gemfile.lock merge conflict, running bundle install" && bundle install --quiet'

[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
