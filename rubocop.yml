---


# Provide more details in output.
AllCops:
  DisplayCopNames: true
  DisplayStyleGuide: true
  ExtraDetails: true

# Enable all the Rails cops.
Rails:
  Enabled: true

# Don't require documentation for everything.
Style/Documentation:
  Enabled: false

# Outdent `private`/`'protected`/`public`.
Style/AccessModifierIndentation:
  EnforcedStyle: outdent

# Use `{}` for blocks that return a value; otherwise use `do` and `end`.
# We make a few exceptions, mostly for RSpec.
Style/BlockDelimiters:
  EnforcedStyle: semantic
  FunctionalMethods:
    - expect
  IgnoredMethods:
    - let
    - let!
    - subject

# Don't require `freeze` on every immutable constant.
Style/MutableConstant:
  Enabled: false

# Don't use backticks -- they're too hard to distinguish.
Style/CommandLiteral:
  EnforcedStyle: percent_x

# Don't require underscores for long numeric literals.
Style/NumericLiterals:
  Enabled: false

# Require a blank lines inside class/module definitions.
Style/EmptyLinesAroundClassBody:
  EnforcedStyle: empty_lines
Style/EmptyLinesAroundModuleBody:
  EnforcedStyle: empty_lines

# Allow (but don't require) extra empty lines.
Style/EmptyLines:
  Enabled: false

# Use `[]` for `%w`, to remind us that we're creating an Array.
# Use `[]` for `%x`, because it looks kind of like an input box.
# Use `{}` for `%q`, because it's set off a bit nicer than `()`.
# Use `{}` for `%r`, because regular expressions might have unbalanced `()` or `<>`.
Style/PercentLiteralDelimiters:
  PreferredDelimiters:
    '%w': []
    '%W': []
    '%x': []
    '%': '{}'
    '%q': '{}'
    '%Q': '{}'
    '%r': '{}'

# Allow explicit `self`, as it adds clarity on occasion.
Style/RedundantSelf:
  Enabled: false

# Use `%r` for regular expressions that span more than 1 line.
Style/RegexpLiteral:
  EnforcedStyle: mixed

# Use Jim Weirich's suggestion of using `fail`, except when re-raising an exception.
Style/SignalException:
  EnforcedStyle: semantic

# Default to double quotes, as they require less incidental changes.
Style/StringLiterals:
  EnforcedStyle: double_quotes

# Allow either type of quotes within the Ruby code inside interpolations.
Style/StringLiteralsInInterpolation:
  Enabled: false

# Allow (but don't require) a space before a block brace.
Style/SpaceBeforeBlockBraces:
  Enabled: false

# Don't allow a space directly inside a Hash literal.
Style/SpaceInsideHashLiteralBraces:
  EnforcedStyle: no_space

# Require a space directly inside a block delineated with braces.
# This is the default, but I wanted to call it out in contrast to Hash literals.
Style/SpaceInsideBlockBraces:
  EnforcedStyle: space
  EnforcedStyleForEmptyBraces: no_space
  SpaceBeforeBlockParameters: true

# When using multi-line Arrays and Hashes, ensure the first element is also on its own line.
Style/FirstArrayElementLineBreak:
  Enabled: true
Style/FirstHashElementLineBreak:
  Enabled: true

# Allow (but don't require) trailing comma in Array and Hash literals.
Style/TrailingCommaInLiteral:
  Enabled: false

# Allow longer lines.
Metrics/LineLength:
  Max: 100

# Don't complain about the block comments generated by RSpec.
Style/BlockComments:
  Exclude:
    - 'spec/spec_helper.rb'

# Prefer `__send__` or `public_send` over `send`.
Style/Send:
  Enabled: true

# Don't complain that `has_many` doesn't end with a question mark.
Style/PredicateName:
  NameWhitelist:
    - has_many

# Ensure there's a newline at the end of the file, but not a blank line.
Style/TrailingBlankLines:
  EnforcedStyle: final_newline
